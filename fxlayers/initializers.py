# AUTOGENERATED! DO NOT EDIT! File to edit: ../Notebooks/01_initializers.ipynb.

# %% auto 0
__all__ = ['bounded_uniform', 'displaced_normal']

# %% ../Notebooks/01_initializers.ipynb 2
from jax import random
from jax._src import dtypes

# %% ../Notebooks/01_initializers.ipynb 4
def bounded_uniform(minval=0.0,
                    maxval=1.0,
                    dtype=dtypes.float_,
                    ):
  def init(key,
           shape,
           dtype=dtype):
    dtype = dtypes.canonicalize_dtype(dtype)
    return random.uniform(key, shape, dtype, minval, maxval)
  return init

# %% ../Notebooks/01_initializers.ipynb 8
def displaced_normal(mean=0., # Mean of the distribution.
                     stddev=1e-2, # Standard deviation of the distribution.
                     dtype=dtypes.float_ # Desired DType of the resulting array.
                     ):
  """Builds an initializer that returns real normally-distributed random arrays."""

  def init(key,
           shape,
           dtype=dtype):
    dtype = dtypes.canonicalize_dtype(dtype)
    return mean + random.normal(key, shape, dtype) * stddev
  return init
